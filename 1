#-*- coding:utf-8 -*-
from http.server import BaseHTTPRequestHandler,HTTPServer
import sys,os

class ServerExcepton(Exception):
    '''fuwuqineibucuowu'''
    pass

class RequestHandler(BaseHTTPRequestHandler):
    '''chuliqingqiubingfanhuiyemian'''

    # yemianmokuai
    #Page = '''\
    #    <html>
    #    <body>
    #    <p>Hello,web!</p>
    #    </body>
    #    </html>
    #'''

    Page = '''\
    <html>
    <body>
    <table>
    <tr>  <td>Header</td>         <td>Value</td>          </tr>
    <tr>  <td>Date and time</td>  <td>{date_time}</td>    </tr>
    <tr>  <td>Client host</td>    <td>{client_host}</td>  </tr>
    <tr>  <td>Client port</td>    <td>{client_port}</td> </tr>
    <tr>  <td>Command</td>        <td>{command}</td>      </tr>
    <tr>  <td>Path</td>           <td>{path}</td>         </tr>
    </table>
    </body>
    </html>'''

    Error_Page = """\
        <html>
        <body>
        <h1>Error accessing {path}</h1>
        <p>{msg}</p>
        </body>
        </html>
        """
    def handle_error(self, msg):
        content = self.Error_Page.format(path=self.path, msg=msg)
        self.send_content(content.encode('utf-8'))

   #def do_GET(self):
   #      Page = self.create_Page()
   #      self.send_content(Page)

    def do_GET(self):
        try:

            # wenjianwanzhenglujin
            full_path = os.getcwd() + self.path

            # ruguogailujinbucunzai...
            if not os.path.exists(full_path):                                               #paochuyichang:wenjianweizhaodao
                raise ServerException("'{0}' not found".format(self.path))

            # ruguogailujinshiyigewenjian
            elif os.path.isfile(full_path):
                #diaoyong handler_file chuligaiwenjian
                self.handle_file(full_path)

            # ruguogailujinbushiyigewenjian
            else:
                #paochuyichang:gailujinweibuzhimingduixiang
                raise ServerException("Unknown object '{0}'".format(self.path))
    #chuliyichang
    except Exception as msg:
        self.handle_error(msg)


    def handle_file(self, full_path):
        try:
            with open(full_path, 'rb') as reader:
                content = reader.read()
            self.send_content(content)
        except IOError as msg:
            msg = "'{0}' cannot be read: {1}".format(self.path, msg)
            self.handle_error(msg)

    def create_Page(self):
        values = {
            'date_time'   : self.date_time_string(),
            'client_host' : self.client_address[0],
            'client_port' : self.client_address[1],
            'command'     : self.command,
            'path'        : self.path                                                    }
        Page = self.Page.format(**values)
        return Page

    def send_content(self,Page):
        self.send_response(200)
        self.send_header("Content-type", "text/html")
        self.send_header("Content-Length", str(len(Page)))
        self.end_headers()
        self.wfile.write(Page)

    #chili yige  get qingqiu
    #def do_GET(self):
    #    self.send_response(200)
    #    self.send_header("Content-Type","text/html")
    #    self.send_header("Content-Length",str(len(self.Page)))
    #    self.end_headers()
    #    self.wfile.write(self.Page.encode('utf-8'))

if __name__ == '__main__':
    serverAddress = ('',8080)
    server = HTTPServer(serverAddress,RequestHandler)
    server.serve_forever()
